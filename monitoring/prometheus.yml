# Prometheus Configuration for JunosCommander
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'junoscommander'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          instance: 'prometheus'

  # JunosCommander Application Instances
  - job_name: 'junoscommander'
    metrics_path: '/metrics'
    static_configs:
      - targets:
          - 'junoscommander-1:9090'
          - 'junoscommander-2:9090'
        labels:
          service: 'junoscommander'
          component: 'application'

  # Traefik Metrics
  - job_name: 'traefik'
    static_configs:
      - targets: ['traefik:8080']
        labels:
          service: 'traefik'
          component: 'proxy'

  # PostgreSQL Exporter
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
        labels:
          service: 'postgres'
          component: 'database'

  # Redis Exporter
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
        labels:
          service: 'redis'
          component: 'cache'

  # Node Exporter (Host Metrics)
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          component: 'infrastructure'

  # Docker Containers
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
        labels:
          component: 'containers'

  # Grafana Metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
        labels:
          service: 'grafana'
          component: 'monitoring'

  # Loki
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
        labels:
          service: 'loki'
          component: 'logging'

# Service Discovery for dynamic targets
# Can be extended with consul, kubernetes, or file-based discovery
file_sd_configs:
  - files:
      - '/etc/prometheus/targets/*.yml'
    refresh_interval: 30s

# Remote write configuration for long-term storage
# remote_write:
#   - url: "https://prometheus-storage.example.com/api/v1/write"
#     basic_auth:
#       username: 'username'
#       password: 'password'

# Remote read configuration
# remote_read:
#   - url: "https://prometheus-storage.example.com/api/v1/read"
#     basic_auth:
#       username: 'username'
#       password: 'password'